version: "3.8"

services:
  blob:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    networks:
      - internal
    restart: on-failure
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - /tmp/blob:/azurite
  
  cosmos:
    image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
    networks:
      - internal    
    restart: on-failure
    ports:
      - "8081:8081"
      - "10250-10255:10250-10255"
    environment:
      AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: "true"
    stdin_open: true
    tty: true

  # memphis-metadata:
  #   image: memphisos/memphis-metadata:docker-15.2.0-debian-11-r27
  #   container_name: memphis-metadata
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U memphis -p 5005"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - internal
  #   ports:
  #     - '5005:5005'
  #   environment:
  #     - POSTGRESQL_USERNAME=memphis
  #     - POSTGRESQL_PASSWORD=memphis
  #     - POSTGRESQL_DATABASE=memphis
  #     - POSTGRESQL_PORT_NUMBER=5005

  # memphis:
  #   image: "memphisos/memphis:1.2.0-stable"
  #   container_name: memphis
  #   depends_on:
  #     memphis-metadata:
  #       condition: service_healthy
  #   healthcheck:
  #     test: wget http://127.0.0.1:9000 --spider || exit 1
  #     interval: 10s
  #     retries: 30
  #     start_period: 5s
  #   restart: on-failure
  #   pull_policy: always
  #   networks:
  #     - internal
  #   ports:
  #     - "9000:9000"
  #     - "6666:6666"
  #     - "7770:7770"
  #   environment:
  #     - ROOT_PASSWORD=memphis
  #     - DOCKER_ENV=true
  #     - USER_PASS_BASED_AUTH=true
  #     - CONNECTION_TOKEN=memphis
  #     - METADATA_DB_HOST=memphis-metadata
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
      
  # memphis-rest-gateway:
  #   image: "memphisos/memphis-rest-gateway:1.1.2"
  #   container_name: memphis-rest-gateway
  #   depends_on:
  #     memphis:
  #       condition: service_healthy
  #   restart: on-failure
  #   pull_policy: always
  #   networks:
  #     - internal
  #   ports:
  #     - "4444:4444"
  #   environment:
  #     - JWT_SECRET=JWT_TEST_PURPOSE
  #     - REFRESH_JWT_SECRET=REFRESH_JWT_TEST_PURPOSE
  #     - USER_PASS_BASED_AUTH=true
  #     - CONNECTION_TOKEN=memphis
  #     - ROOT_USER=root
  #     - ROOT_PASSWORD=memphis
  #     - MEMPHIS_HOST=memphis
  #     - HTTP_PORT=4444

  # rabbitmq:
  #   image: "rabbitmq:management"
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest

  # masstransit:
  #   build:
  #     context: .
  #   depends_on:
  #     - rabbitmq
  onsight_mq:
    build:
        context: ./MassTransit.RabbitMq/
        dockerfile: DockerFile
    hostname: "messagequeue"
    ports:
        - "15672:15672"
        - "5672:5672"
        - "1883:1883"
        - "8883:8883"
    volumes:
        - ./docker_storage/message_queue/mnesia:/var/lib/rabbitmq/mnesia
        - ./MassTransit.RabbitMq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

networks:
  internal:
    ipam:
      driver: default